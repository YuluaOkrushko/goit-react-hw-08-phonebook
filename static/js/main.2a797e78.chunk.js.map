{"version":3,"sources":["routes.js","Components/Navigation/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav/AuthNuv.js","Components/NavBar/NavBar.js","Common/PrivateRoute.js","Common/PublicRoute.js","App.js","Redux/contact/reduser/contactRedusers.js","Redux/contact/reduser/filterReducers.js","Redux/store.js","index.js","Redux/auth/authSelectors.js","Redux/auth/authReducer.js","Redux/auth/authOperations.js","Redux/contact/actions/contactActions.js","Components/UserMenu/UserMenu.module.css","Redux/auth/authActions.js","Redux/contact/actions/filterActions.js"],"names":["path","label","exact","component","lazy","private","restricted","connect","state","isAuthenticated","authSelectors","Nav","className","Link","as","to","name","getUserName","avatar","onLogout","authOperations","logOut","styles","container","src","alt","width","Button","variant","onClick","AuthNav","Navbar","collapseOnSelect","bg","Brand","Component","restProps","render","props","pathname","from","location","routeProps","App","this","getCurrentUser","fallback","routes","map","route","mapDispatchToProps","phoneBookReducer","createReducer","contactActions","fetchContactsSuccess","action","payload","addContactSuccess","deleteContactSuccess","filter","contact","id","combineReducers","filterContactReducer","filterActions","value","defaultMiddleware","getDefaultMiddleware","serializableCheck","authPersistConfiguration","key","storage","whiteList","store","configureStore","reducer","contacts","contactsReducers","filterReducers","auth","persistReducer","authReducer","middleware","persistor","persistStore","ReactDOM","loading","document","querySelector","user","initialUserState","email","authActions","registerSuccess","_","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","axios","defaults","baseURL","headers","common","Authorization","register","records","dispatch","a","registerRequest","post","response","data","message","logIn","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","addContactRequest","createAction","addContactError","fetchContactsRequest","fetchContactsError","deleteContactRequest","deleteContactError","module","exports","filterContactByName"],"mappings":"4PAEe,GACb,CACEA,KAAM,IACNC,MAAO,OACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,SACNC,MAAO,QACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,uDACtBC,SAAS,EACTC,YAAY,I,wBCLDC,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcD,gBAAgBD,MAGlCD,EArBI,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACjB,eAACE,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,IAAvB,kBAGCN,GACC,cAACE,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,4B,0BCgBSR,eANS,SAAAC,GAAK,MAAK,CAChCQ,KAAMN,IAAcO,YAAYT,GAChCU,OACE,iFAGoC,CAAEC,SAAUC,IAAeC,QAApDd,EAtBE,SAAC,GAAD,IAAGW,EAAH,EAAGA,OAAQF,EAAX,EAAWA,KAAMG,EAAjB,EAAiBA,SAAjB,OACf,sBAAKP,UAAWU,IAAOC,UAAvB,UACE,qBAAKC,IAAKN,EAAQO,IAAI,GAAGC,MAAM,KAAKd,UAAWU,IAAOJ,SACtD,uBAAMN,UAAWU,IAAON,KAAxB,sBAAwCA,KACxC,cAACW,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAASV,EAAxC,0BCOWW,EAbC,kBACd,eAACnB,EAAA,EAAD,WACE,cAACA,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,SAAvB,mBAGA,cAACJ,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,YAAvB,0B,SCcWR,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcD,gBAAgBD,MAGlCD,EAfO,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACpB,eAACsB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,OAAOL,QAAQ,OAA3C,UACE,cAACG,EAAA,EAAOG,MAAR,yBACA,cAAC,EAAD,IAFF,IAEkBzB,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,QCgBtCF,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcD,gBAAgBD,MAGlCD,EAvBM,SAAC,GAAD,IACR4B,EADQ,EACnBhC,UACAM,EAFmB,EAEnBA,gBACG2B,EAHgB,sDAKnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX7B,EACE,cAAC0B,EAAD,eAAeG,IAEf,cAAC,IAAD,CACEvB,GAAI,CAAEwB,SAAU,SAAU/B,MAAO,CAAEgC,KAAMF,EAAMG,oBCS1ClC,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,IAAcD,gBAAgBD,MAGlCD,EArBK,SAAC,GAAD,IACP4B,EADO,EAClBhC,UACAM,EAFkB,EAElBA,gBACGiC,EAHe,sDAKlB,cAAC,IAAD,2BACMA,GADN,IAEEL,OAAQ,SAAAC,GAAK,OACX7B,GAAmBiC,EAAWpC,WAC5B,cAAC,IAAD,CAAUS,GAAG,cAEb,cAACoB,EAAD,eAAeG,W,QCNjBK,G,6KACJ,WACEC,KAAKN,MAAMO,mB,oBAGb,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACE,cAAC,IAAD,UACGC,EAAOC,KAAI,SAAAC,GAAK,OACfA,EAAM5C,QACJ,cAAC,EAAD,eAAoC4C,GAAjBA,EAAMhD,OAEzB,cAAC,EAAD,2BAEMgD,GAFN,IAGE3C,WAAY2C,EAAM3C,aAFb2C,EAAMhD,qB,GAhBXkC,cA6BZe,EAAqB,CACzBL,eAAgBzB,IAAeyB,gBAGlBtC,cAAQ,KAAM2C,EAAd3C,CAAkCoC,G,8DChC3CQ,EAAmBC,YAAc,IAAD,mBACnCC,IAAeC,sBAAuB,SAAC9C,EAAO+C,GAAR,OAAmBA,EAAOC,WAD7B,cAEnCH,IAAeI,mBATC,SAACjD,EAAO+C,GACzB,MAAM,GAAN,mBAAW/C,GAAX,CAAkB+C,EAAOC,aAMW,cAGnCH,IAAeK,sBAPI,SAAClD,EAAO+C,GAC5B,OAAO/C,EAAMmD,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAON,EAAOC,cAGjB,IAMvBM,cAAgB,CAC7BX,qB,QCdIY,EAAuBX,YAAc,GAAD,eACvCY,KAAgB,SAACxD,EAAO+C,GAAR,OAAmBA,EAAOC,QAAQS,UAGtCH,cAAgB,CAC7BC,yB,QCFIG,EAAoBC,YAAqB,CAC7CC,mBAAmB,IAGfC,EAA2B,CAC/BC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,EACVlB,OAAQmB,EACRC,KAAMC,YAAeX,EAA0BY,MAEjDC,WAAW,YAAKhB,KAGLiB,EAAYC,YAAaX,GClBtCY,IAAShD,OACP,cAAC,IAAD,CAAUoC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaa,QAAS,KAAMH,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINI,SAASC,cAAc,W,6HCZV,GAAE/E,gBAJO,SAAAD,GAAK,OAAIA,EAAMuE,KAAKtE,iBAIVQ,YAFd,SAAAT,GAAK,OAAIA,EAAMuE,KAAKU,KAAKzE,Q,wECCvC0E,EAAmB,CAAE1E,KAAM,KAAM2E,MAAO,MAExCF,EAAOrC,YAAcsC,GAAD,mBACvBE,IAAYC,iBAAkB,SAACC,EAAD,YAAMtC,QAAsBiC,QADnC,cAEvBG,IAAYG,cAAe,SAACD,EAAD,YAAMtC,QAAsBiC,QAFhC,cAGvBG,IAAYI,uBAAwB,SAACF,EAAD,YAAMtC,WAHnB,cAIvBoC,IAAYK,eAAgB,kBAAMP,KAJX,IAOpBQ,EAAQ9C,YAAc,MAAD,mBACxBwC,IAAYC,iBAAkB,SAACC,EAAD,YAAMtC,QAAsB0C,SADlC,cAExBN,IAAYG,cAAe,SAACD,EAAD,YAAMtC,QAAsB0C,SAF/B,cAGxBN,IAAYK,eAAgB,kBAAM,QAHV,IAMrBE,EAAW,SAACL,EAAD,YAAMtC,SAEjB4C,EAAQhD,YAAc,MAAD,mBACxBwC,IAAYS,cAAgBF,GADJ,cAExBP,IAAYU,WAAaH,GAFD,cAGxBP,IAAYW,YAAcJ,GAHF,cAIxBP,IAAYY,oBAAsBL,GAJV,IAOrB1F,EAAkB2C,aAAc,GAAD,mBAClCwC,IAAYC,iBAAkB,kBAAM,KADF,cAElCD,IAAYG,cAAe,kBAAM,KAFC,cAGlCH,IAAYI,uBAAwB,kBAAM,KAHR,cAIlCJ,IAAYS,eAAgB,kBAAM,KAJA,cAKlCT,IAAYU,YAAa,kBAAM,KALG,cAMlCV,IAAYY,qBAAsB,kBAAM,KANN,cAOlCZ,IAAYW,aAAc,kBAAM,KAPE,cAQlCX,IAAYK,eAAgB,kBAAM,KARA,IAWtBnC,gBAAgB,CAC7B2B,OACAS,QACAzF,kBACA2F,W,qFCvCFK,IAAMC,SAASC,QAAU,4CAEzB,IAAMT,EAAQ,SACRA,GACFO,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDZ,IAFtDA,EAAQ,WAKVO,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAuDnC,KAAEC,SAnDA,SAAAC,GAAO,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC1BD,EAASrB,IAAYuB,mBADK,kBAGDV,IAAMW,KAAK,gBAAiBJ,GAH3B,OAGlBK,EAHkB,OAIxBnB,EAAUmB,EAASC,KAAKpB,OACxBe,EAASrB,IAAYC,gBAAgBwB,EAASC,OALtB,gDAOxBL,EAASrB,IAAYS,cAAc,KAAMkB,UAPjB,yDAAJ,uDAmDGC,MAxCb,SAAAR,GAAO,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACvBD,EAASrB,IAAY6B,gBADE,kBAGEhB,IAAMW,KAAK,cAAeJ,GAH5B,OAGfK,EAHe,OAIrBnB,EAAUmB,EAASC,KAAKpB,OACxBe,EAASrB,IAAYG,aAAasB,EAASC,OALtB,gDAOrBL,EAASrB,IAAYU,WAAW,KAAMiB,UAPjB,yDAAJ,uDAwCalG,OA7BnB,yDAAM,WAAM4F,GAAN,SAAAC,EAAA,6DACnBD,EAASrB,IAAY8B,iBADF,kBAGXjB,IAAMW,KAAK,iBAHA,OAIjBlB,IACAe,EAASrB,IAAYK,iBALJ,gDAOjBgB,EAASrB,IAAYW,YAAY,KAAMgB,UAPtB,yDAAN,uDA6B2B1E,eAlBnB,yDAAM,WAAOoE,EAAUU,GAAjB,mBAAAT,EAAA,2DAGvBS,IADaC,EAFU,EAEzB7C,KAAQmB,MAFiB,wDAO3BA,EAAU0B,GACVX,EAASrB,IAAYiC,yBARM,kBAWFpB,IAAMqB,IAAI,kBAXR,OAWnBT,EAXmB,OAYzBJ,EAASrB,IAAYI,sBAAsBqB,EAASC,OAZ3B,kDAczBL,EAASrB,IAAYY,oBAAoB,KAAMe,UAdtB,0DAAN,2D,gCC/CvB,WAEMQ,EAAoBC,YAAa,sBACjCvE,EAAoBuE,YAAa,sBACjCC,EAAkBD,YAAa,oBAE/BE,EAAuBF,YAAa,wBACpC1E,EAAuB0E,YAAa,wBACpCG,EAAqBH,YAAa,sBAElCI,EAAuBJ,YAAa,yBACpCtE,EAAuBsE,YAAa,yBACpCK,EAAqBL,YAAa,uBAEzB,KACbD,oBACAtE,oBACAwE,kBACAC,uBACA5E,uBACA6E,qBACAC,uBACA1E,uBACA2E,uB,mBCtBFC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,KAAO,yB,+BCDnG,WAEMpB,EAAkBa,YAAa,wBAC/BnC,EAAkBmC,YAAa,wBAC/B3B,EAAgB2B,YAAa,sBAE7BP,EAAeO,YAAa,qBAC5BjC,EAAeiC,YAAa,qBAC5B1B,EAAa0B,YAAa,mBAE1BN,EAAgBM,YAAa,sBAC7B/B,EAAgB+B,YAAa,sBAC7BzB,EAAcyB,YAAa,oBAE3BH,EAAwBG,YAAa,8BACrChC,EAAwBgC,YAAa,8BACrCxB,EAAsBwB,YAAa,4BAE1B,KACbb,kBACAtB,kBACAQ,gBACAoB,eACA1B,eACAO,aACAoB,gBACAzB,gBACAM,cACAsB,wBACA7B,wBACAQ,wB,gCC9BF,WAEMgC,EAAsBR,YAAa,kBAAkB,SAAA/D,GACzD,MAAO,CACLT,QAAS,CACPS,aAISuE,Q","file":"static/js/main.2a797e78.chunk.js","sourcesContent":["import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./Pages/HomePage/HomePage.js')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./Pages/RegisterPage/RegisterPage.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./Pages/LoginPage/LoginPage.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./Pages/ContactPage/ContactPage.js')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { authSelectors } from '../../Redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <Nav className=\"mr-auto\">\r\n    <Nav.Link as={Link} to=\"/\">\r\n      Home\r\n    </Nav.Link>\r\n    {isAuthenticated && (\r\n      <Nav.Link as={Link} to=\"/contacts\">\r\n        Contacts\r\n      </Nav.Link>\r\n    )}\r\n  </Nav>\r\n);\r\n\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport { authSelectors, authOperations } from '../../Redux/auth';\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n    <span className={styles.name}>Welcome, {name}</span>\r\n    <Button variant=\"outline-info\" onClick={onLogout}>\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nUserMenu.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    'https://icon-library.com/images/avatar-icon-images/avatar-icon-images-7.jpg',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthNav = () => (\r\n  <Nav>\r\n    <Nav.Link as={Link} to=\"/login\">\r\n      Login\r\n    </Nav.Link>\r\n    <Nav.Link as={Link} to=\"/register\">\r\n      Register\r\n    </Nav.Link>\r\n  </Nav>\r\n);\r\n\r\nAuthNav.propTypes = PropTypes.any.isRequired;\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNuv';\r\nimport { authSelectors } from '../../Redux/auth';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NavigationBar = ({ isAuthenticated }) => (\r\n  <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand>Phone Book</Navbar.Brand>\r\n    <Navigation /> {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </Navbar>\r\n);\r\n\r\nNavigationBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavigationBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../Redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...restProps\r\n}) => (\r\n  <Route\r\n    {...restProps}\r\n    render={props =>\r\n      isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: '/login', state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../Redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport NavigationBar from './Components/NavBar/NavBar';\r\nimport PrivateRoute from './Common/PrivateRoute';\r\nimport PublicRoute from './Common/PublicRoute';\r\nimport authOperations from './Redux/auth/authOperations';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavigationBar></NavigationBar>\r\n        <Suspense fallback={<h4>Loading...</h4>}>\r\n          <Switch>\r\n            {routes.map(route =>\r\n              route.private ? (\r\n                <PrivateRoute key={route.label} {...route} />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={route.label}\r\n                  {...route}\r\n                  restricted={route.restricted}\r\n                />\r\n              ),\r\n            )}\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from '../actions/contactActions';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst phoneBookReducer = createReducer([], {\r\n  [contactActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactActions.addContactSuccess]: addContact,\r\n  [contactActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nexport default combineReducers({\r\n  phoneBookReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from '../actions/filterActions';\r\n\r\nconst filterContactReducer = createReducer('', {\r\n  [filterActions]: (state, action) => action.payload.value,\r\n});\r\n\r\nexport default combineReducers({\r\n  filterContactReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducers from './contact/reduser/contactRedusers';\r\nimport filterReducers from './contact/reduser/filterReducers';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\nconst authPersistConfiguration = {\r\n  key: 'auth',\r\n  storage,\r\n  whiteList: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n    filter: filterReducers,\r\n    auth: persistReducer(authPersistConfiguration, authReducer),\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.querySelector('#root'),\n);\n","const isAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from '../auth/authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = records => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', records);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = records => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('users/login', records);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contact/addRequest');\r\nconst addContactSuccess = createAction('contact/addSuccess');\r\nconst addContactError = createAction('contact/addError');\r\n\r\nconst fetchContactsRequest = createAction('contact/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contact/fetchSuccess');\r\nconst fetchContactsError = createAction('contact/fetchError');\r\n\r\nconst deleteContactRequest = createAction('contact/deleteRequest');\r\nconst deleteContactSuccess = createAction('contact/deleteSuccess');\r\nconst deleteContactError = createAction('contact/deleteError');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__Ykiz7\",\"avatar\":\"UserMenu_avatar__2i3bW\",\"name\":\"UserMenu_name__2luQj\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContactByName = createAction('contact/filter', value => {\r\n  return {\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n});\r\nexport default filterContactByName;\r\n"],"sourceRoot":""}